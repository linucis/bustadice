var config = {
  wager: { label: "Wager", type: "balance", value: 100 },
  target: { label: "Target", type: "multiplier", value: 2.00 },
  speed: { label: "Speed", type: "number", value: 1 },
  length: { label: "Length", type: "number", value: 1000 } 
};

const baseBet                       = config.wager.value             // Starting Bet in Satoshi (100 satoshi = 1 bit)
const baseTarget                    = config.target.value            // Starting Multiplier
const increaseAfterX                = 1                              // Increase after X
const pausePerBetMilliseconds       = config.speed.value             // Slow script in milliseconds
const highTarget                    = 1000                           // High Count


function sleep(ms) {     return new Promise(resolve => setTimeout(resolve, ms)) }

let consecutiveLosses               = 0
let endScript                       = config.length.value            // End the script if we hit (X) consecutive losses
let bet                             = baseBet
let target                          = baseTarget
let lossStreak                      = 0
let lessTarget                      = 0

this.log(`Beginning Script With ${baseBet/100} Bit(s).`)

while (true) {
    if (pausePerBetMilliseconds != 0){await sleep(pausePerBetMilliseconds)} 
            const { multiplier } = await this.bet(bet, target)
            await sleep(0)
    if (multiplier > highTarget) {
            lessTarget = 0
}
    if (multiplier < highTarget) {
            lessTarget +=1
}

    if (multiplier < target) { // loss
            consecutiveLosses++
            await this.log(`(${lossStreak}) | Loss #${consecutiveLosses} | ${highTarget} > ${lessTarget}`)
            console.log("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
            if (consecutiveLosses % increaseAfterX === 0) {
                target += (baseTarget + lossStreak)    
}   

    if (consecutiveLosses >= endScript){
            await this.stop()
}
               
} else { // win
            await this.newSeedPair()
            lossStreak = 0
            consecutiveLosses = 0
            bet = baseBet
            target = baseTarget
            await this.log(`(${lossStreak}) | Won Bet | ${highTarget} > ${lessTarget}`)
            console.log("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
            if (pausePerBetMilliseconds != 0){await sleep((pausePerBetMilliseconds))} 
        }
}
