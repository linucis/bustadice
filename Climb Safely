
const baseBet                       = 100             // Starting Bet in Satoshi (100 satoshi = 1 bit)
const baseTarget                    = 1.25            // Starting ultiplier
const increaseAfterX                = 1               // Increase after X
const increaseBy                    = 1               // Multiply Bet By
const highTarget                    = 1000             // High Count
const pausePerBetMilliseconds       = 1              // Slow script in milliseconds



function sleep(ms) {     return new Promise(resolve => setTimeout(resolve, ms)) }
let targetIncrease                  = baseTarget             // + Add to Target
let consecutiveLosses               = 0
let endScript                       = 800              // End the script if we hit (X) consecutive losses
let bet                             = baseBet
let target                          = baseTarget
let lossStreak                      = 0
let bigTarget                       = 0


this.log(`Beginning Script With ${baseBet/100} Bit(s).`)


while (true) {
    if (pausePerBetMilliseconds != 0){await sleep(pausePerBetMilliseconds)} 
            const { multiplier } = await this.bet(bet, target)
            await sleep(0)
    if (multiplier > highTarget) {
            bigTarget = 0
       }
    if (multiplier < highTarget) {
            bigTarget +=1
      }

    if (multiplier < target) { // loss
            consecutiveLosses++
            lossStreak++
            await this.log(`Loss #${consecutiveLosses} | ${highTarget} > ${bigTarget}`)
console.log("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
            if (consecutiveLosses % increaseAfterX === 0) {
                bet *= increaseBy
                target += targetIncrease    
            }   
 

if (consecutiveLosses >= endScript){
            lossStreak = 0
            consecutiveLosses = 0
            bet = baseBet
            target = baseTarget
            await this.log(`Limit Reached | Restarting Script With ${baseBet/100} Bit(s).`)
console.log("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
if (pausePerBetMilliseconds != 0){await sleep((pausePerBetMilliseconds)*5000000)} 
        }
       
        
        
        } else { // win
            lossStreak = 0
            consecutiveLosses = 0
            bet = baseBet
            target = baseTarget
            await this.log(`Won Bet | ${highTarget} > ${bigTarget}`)
console.log("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
if (pausePerBetMilliseconds != 0){await sleep((pausePerBetMilliseconds)*2)} 
        }
}
